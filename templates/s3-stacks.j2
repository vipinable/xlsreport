---
AWSTemplateFormatVersion: 2010-09-09

Resources:
#    s3Key{{ sceptre_user_data.AppName }}:
#      Type: AWS::KMS::Key
#      Properties:
#        EnableKeyRotation: true
#        KeyPolicy:
#          Version: 2012-10-17
#          Id: key-s3
#          Statement:
#            - Sid: Enable IAM User Permissions
#              Effect: Allow
#              Principal:
#                AWS: !Join
#                  - ""
#                  - - "arn:aws:iam::"
#                    - !Ref "AWS::AccountId"
#                    - ":root"
#              Action: "kms:*"
#              Resource: "*"
#    # create a KMS alias, using a alias will make coding easier and gives the opportunity to change KMS keys without impacting the code
#    s3KeyAlias{{ sceptre_user_data.AppName }}:
#      Type: AWS::KMS::Alias
#      Properties:
#        AliasName: alias/s3{{ sceptre_user_data.AppName }}{{ sceptre_user_data.EnvName }}
#        TargetKeyId:
#            Ref: s3Key{{ sceptre_user_data.AppName }}

    S3Bucket{{ sceptre_user_data.AppName }}:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: {{ sceptre_user_data.AppName }}-{{ sceptre_user_data.EnvName }}-codebucket
        BucketEncryption:
            ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault: 
                SSEAlgorithm: 'AES256' 

        AccessControl: BucketOwnerFullControl
        LifecycleConfiguration:
          Rules:
           -  Id: dailyBkpRule
              AbortIncompleteMultipartUpload:
                DaysAfterInitiation: 7
              NoncurrentVersionExpirationInDays: 1
              ExpirationInDays: 7
              Status: Enabled
              Prefix: dailybkp
           -  Id: hrlyBkpRule
              AbortIncompleteMultipartUpload:
                DaysAfterInitiation: 7
              NoncurrentVersionExpirationInDays: 1
              ExpirationInDays: 3
              Status: Enabled
              Prefix: hrlybkp
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        Tags:
         -  Key: security:DataClassification
            Value: Non-Public
        VersioningConfiguration:
          Status: Enabled
        #ObjectLockConfiguration:
        #  ObjectLockEnabled: Disabled
        #  Rule:
        #    DefaultRetention:
        #      Mode: COMPLIANCE
        #      Days: 7
        #ObjectLockEnabled: False


    # create a bucketpolicy for the s3 bucket
    S3BucketPolicy{{ sceptre_user_data.AppName }}:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket{{ sceptre_user_data.AppName }}
        PolicyDocument:
          Statement:
            # Don't allow requests other than SSL
            - Sid: AllowSSLRequestsOnly
              Action: s3:*
              Effect: Deny
              Resource: !Join
                 - ''
                 -  - 'arn:aws:s3:::'
                    - !Ref S3Bucket{{ sceptre_user_data.AppName }}
                    - /*
              Condition:
                Bool:
                  aws:SecureTransport: 'false'
              Principal: "*"
            # allow the entire AWS account access to the S3 bucket; this can/should be more fine grained if possible
            - Sid: WholeAccountCanAccess
              Effect: Allow
              Principal:
                AWS: !Join
                  - ''
                  - - 'arn:aws:iam::'
                    - !Ref 'AWS::AccountId'
                    - ':root'
              Action: s3:*
              Resource: !Join ["", ["arn:aws:s3:::", !Ref S3Bucket{{ sceptre_user_data.AppName }}]]
